name: nimbus-fml
version: "1.1"
author: nimbus-dev@mozilla.com
about: Tool for working with Nimbus Feature Manifests
args:
    - config:
        short: c
        long: config
        value_name: FILE
        help: Sets a custom config file
        takes_value: true
    - verbose:
        short: v
        multiple: true
        help: Sets the level of verbosity
    - INPUT:
        # This will move to the generate command when deprecated commands are removed.
        help: Sets the input file to use (deprecated, use `generate` command instead)
        required: false
        index: 1
    - output:
        # This will move to the generate command when deprecated commands are removed.
        help: The file where generated code is created (deprecated, use `generate` command instead)
        short: o
        long: output
        value_name: FILE
        required: false
        global: true
    - channel:
        # This will move to the generate command when deprecated commands are removed.
        help: The release channel to generate code for
        long: channel
        short: h
        global: true
        takes_value: true
subcommands:
    - intermediate-repr:
        about: Generate the intermediate representation json, useful for debugging
        # Uncomment this once we remove the global input and outputs above.
        # args:
        #     - INPUT:
        #         help: Sets the input file to use
        #         required: true
        #         index: 1
        #     - OUTPUT:
        #         help: The file or directory where generated code is created
        #         required: true
        #         index: 2
    - generate:
        about: Generate feature structs against the Feature Variables API.
        args:
            - INPUT:
                help: Sets the input file to use
                required: true
                index: 1
            - OUTPUT:
                help: The file or directory where generated code is created
                required: true
                index: 2
            - language:
                help: The language of the output file
                long: language
                takes_value: true
                possible_values:
                  - swift
                  - kotlin
            #  Uncomment this once we remove the global option above.
            # - channel:
            #     help: The channel to generate the defaults for
            #     long: channel
            #     global: false
            #     takes_value: true

            - cache-dir:
                help: The directory where downloaded files are cached
                long: cache-dir
                takes_value: true
            - repo-file:
                help: The file containing the version/refs/locations for other repos
                long: repo-file
                takes_value: true
                multiple: true
    - generate-experimenter:
        about: Generate feature structs against the Feature Variables API.
        args:
            - INPUT:
                help: Sets the input file to use
                required: true
                index: 1
            - OUTPUT:
                help: The file or directory where generated code is created
                required: true
                index: 2
            # This will move to the generate command when deprecated commands are removed.
            # - channel:
            #     help: The channel to generate the defaults for
            #     long: channel
            #     takes_value: true

            - cache-dir:
                help: The directory where downloaded files are cached
                long: cache-dir
                takes_value: true
            - repo-file:
                help: The file containing the version/refs/locations for other repos
                long: repo-file
                takes_value: true
                multiple: true
    - fetch:
        about: Get the input file, with the same rules that govern how FilePaths work.
        args:
            - INPUT:
                help: Sets the input file to use
                required: true
                index: 1
            - cache-dir:
                help: The directory where downloaded files are cached
                long: cache-dir
                takes_value: true
            - repo-file:
                help: The file containing the version/refs/locations for other repos
                long: repo-file
                takes_value: true
                multiple: true
    - single-file:
        about: Create a single file out of the given manifest,
            suited for production environments where only one file is
            allowed, and only one channel is needed.
        args:
            - INPUT:
                help: Sets the input file to use
                required: true
                index: 1
            - OUTPUT:
                help: The file or directory where generated code is created
                required: true
                index: 2
            # This will move to the generate command when deprecated commands are removed.
            # - channel:
            #     help: The channel to generate the defaults for
            #     long: channel
            #     takes_value: true

            - cache-dir:
                help: The directory where downloaded files are cached
                long: cache-dir
                takes_value: true
            - repo-file:
                help: The file containing the version/refs/locations for other repos
                long: repo-file
                takes_value: true
                multiple: true
    - validate:
          about: Validate an FML configuration and all of its channels.
          args:
              - INPUT:
                    help: Sets the input file to use
                    required: true
                    index: 1
              - cache-dir:
                    help: The directory where downloaded files are cached
                    long: cache-dir
                    takes_value: true
              - repo-file:
                    help: The file containing the version/refs/locations for other repos
                    long: repo-file
                    takes_value: true
                    multiple: true
######################################
# Deprecated commands.
######################################
    - experimenter:
        about: Generate code for Experimenter
    - android:
        about: Generate code for Android (deprecated, use `generate` command instead)
        subcommands:
            - features:
                about: Generate feature structs against the Feature Variables API.
                args:
                    - package:
                        help: The package name where the features class will live
                        long: package
                        value_name: PACKAGE
                        required: false
                        global: false
                    - class_name:
                        help: The name of the class as it will be known by the app developer
                        long: classname
                        value_name: CLASSNAME
                        required: false
                        global: false
                    - r_package:
                        help: The package name that contains the R class
                        long: r-package
                        value_name: R_PACKAGE
                        required: false
                        global: false
    - ios:
        # This will move to the generate command when deprecated commands are removed.
        about: Generate code for iOS (deprecated, use `generate` command instead)
        subcommands:
            - features:
                about: Generate feature structs against the Feature Variables API.
                args:
                    - class_name:
                        help: The name of the class as it will be known by the app developer
                        long: classname
                        value_name: CLASSNAME
                        global: false
                        required: false
