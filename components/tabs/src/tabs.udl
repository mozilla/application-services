namespace tabs {

};

[Error]
enum TabsError {
    "SyncAdapterError",
    "SyncResetError",
    "JsonError",
    "UrlParseError",
    "SqlError",
    "OpenDatabaseError",
};


interface TabsStore {
    constructor(string path);

    sequence<ClientRemoteTabs> get_all();

    void set_local_tabs(sequence<RemoteTabRecord> remote_tabs);

    [Self=ByArc]
    void register_with_sync_manager();

    [Throws=TabsError, Self=ByArc]
    void reset();

    [Throws=TabsError, Self=ByArc]
    string sync(string key_id, string access_token, string sync_key, string tokenserver_url, string local_id);
};

// Note that this enum is duplicated in fxa-client.udl (although the underlying type *is*
// shared). This duplication exists because there's no direct dependency between that crate and
// this one. We can probably remove the duplication when sync15 gets a .udl file, then we could
// reference it via an `[Extern=...]typedef`
enum TabsDeviceType { "Desktop", "Mobile", "Tablet", "VR", "TV", "Unknown" };

dictionary RemoteTabRecord {
    string title;
    sequence<string> url_history;
    string? icon;
    i64 last_used;
};

dictionary ClientRemoteTabs {
    string client_id;
    string client_name;
    TabsDeviceType device_type;
    sequence<RemoteTabRecord> remote_tabs;
};
