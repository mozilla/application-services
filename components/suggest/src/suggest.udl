namespace suggest {

};

[Error]
interface SuggestApiError {
    Other(string reason);
};

dictionary IngestLimits {
    u64? records;
};

dictionary Suggestion {
    string block_id;
    string advertiser;
    string iab_category;
    boolean is_sponsored;
    string full_keyword;
    string title;
    string url;
    sequence<u8>? icon;
    string? impression_url;
    string? click_url;
};

interface SuggestionQuery {
    [Self=ByArc]
    SuggestionQuery keyword([ByRef] string keyword);

    [Self=ByArc]
    SuggestionQuery include_sponsored(boolean include_sponsored);

    [Self=ByArc]
    SuggestionQuery include_non_sponsored(boolean include_non_sponsored);

    [Throws=SuggestApiError]
    sequence<Suggestion> results();
};

interface SuggestStore {
    [Throws=SuggestApiError]
    constructor([ByRef] string path);

    [Self=ByArc]
    SuggestionQuery query();

    void interrupt();

    [Throws=SuggestApiError]
    void ingest([ByRef] IngestLimits limits);
};
