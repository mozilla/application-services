namespace merino_client {

};

[Error]
interface MerinoClientError {
    Other(string reason);
};

dictionary MerinoClientOptions {
    string endpoint_url;
    sequence<string> client_variants;
    i64 timeout_ms;
    sequence<string> providers;
};

dictionary MerinoClientFetchOptions {
    sequence<string> providers;
    i64 timeout_ms;
};

dictionary MerinoSuggestion {
    string title;
    string url;
    string provider;
    boolean is_sponsored;
    f64 score;
    string? icon;
    string request_id;
    sequence<string> client_variants;
};

interface MerinoClient {
    constructor(MerinoClientOptions options);

    [Throws=MerinoClientError]
    sequence<MerinoSuggestion> fetch([ByRef] string query, MerinoClientFetchOptions? options);
};
