namespace merino_client {

};

[Error]
interface MerinoClientError {
    BadUrl(string reason);
    FetchFailed(string reason);
};

[Enum]
interface MerinoServer {
    Production();
    Stage();
    Custom(string url);
};

dictionary MerinoClientSettings {
    MerinoServer server;
    u64 session_duration_ms;
    sequence<string> client_variants = [];
    sequence<string> default_providers = [];
};

dictionary MerinoClientFetchOptions {
    sequence<string>? providers = null;
};

dictionary MerinoSuggestion {
    string title;
    string url;
    string provider;
    boolean is_sponsored;
    f64 score;
    string? icon;
    string request_id;
};

interface MerinoClient {
    [Throws=MerinoClientError]
    constructor(MerinoClientSettings settings);

    [Throws=MerinoClientError]
    sequence<MerinoSuggestion> fetch([ByRef] string query, optional MerinoClientFetchOptions? options = null);
};
