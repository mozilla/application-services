searchState.loadedDescShard("search", 0, "Contains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis module defines the main <code>SearchEngineSelector</code>.\nThis module defines the types that we export across the …\nSearchEngineSelector parses the JSON configuration for …\nClears the search configuration from memory if it is known …\nFilters the search configuration with the user’s given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets the search configuration from the given string. If …\nSets the RemoteSettingsService to use. The selector will …\nDetails of the search engines to display to the user, …\nThe list of possible application names that are currently …\nThe list of acceptable classifications for a search engine.\nA definition for an individual search engine to be …\nDefines an individual search engine URL.\nThe URLs associated with the search engine.\nThe list of possible update channels for a user’s build. …\nParameter definitions for search engine URLs. The name …\nThe user’s environment that is used for filtering the …\nIf this URL performs searches only for certain MIME types, …\nA list of aliases for this engine.\nThe identifier of the engine that should be used for the …\nThe application name that the user is using.\nIf specified, the identifier of the engine that should be …\nThe PrePath and FilePath of the URL. May include variables …\nThe character set this engine uses for queries.\nThe classification of search engine according to the main …\nThe url used for reporting clicks.\nThe device type that the user is using.\nThe display name of the URL, if any. This is useful if the …\nThe distribution id for the user’s build.\nA sorted list of engines. Clients may use the engine in …\nSame as value but only used if …\nWhether the engine’s partner code should be excluded …\nThe search related experiment id that the user is included …\nThe value for the parameter will be derived from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe identifier of the search engine. This is used as an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates the date until which the URL is considered new …\nIndicates the date until which the engine variant or …\nThe current locale of the application that the user is …\nThe HTTP method to use to send the request (<code>GET</code> or <code>POST</code>). …\nThe name of the parameter in the url.\nThe user visible name of the search engine.\nThis search engine is presented as an option that the user …\nA hint to the order that this engine should be in the …\nThe parameters for this URL.\nThe partner code for the engine. This will be inserted …\nThe home region that the user is currently identified as …\nThe URL to use for searches.\nThe URL of the search engine homepage.\nThe name of the query parameter for the search term. …\nThe URL to use for suggestions.\nOptional suffix that is appended to the search engine …\nThe URL to use for trending suggestions.\nThe update channel of the user’s build.\nThe URLs associated with the search engine.\nThe parameter value, this may be a static value, or …\nThe application version that the user is using.\nThe URL to use for visual searches.")