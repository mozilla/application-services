searchState.loadedDescShard("logins", 0, "A login stored in the database\nContains the error value\nContains the error value\nLogins error type These are “internal” errors used by …\nError::InvalidLogin subtypes\nA login stored in the database\nA login entered by the user\nContains the success value\nContains the success value\nLogin data specific to database records\nLoginEntry fields that are stored encrypted\nTell the application to log a breadcrumb\nDelete the record with the provided id. Returns true if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalled by the sync manager to get a sync engine via the …\nA procedural macro that exposes internal errors to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTell the application to report an error\nInternal helper for doing validation and fixups.\nWe don’t actually have fixups.")