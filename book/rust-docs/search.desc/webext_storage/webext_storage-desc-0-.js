searchState.loadedDescShard("webext_storage", 0, "Information about the usage of a single extension.\nThe number of entries (rows in the original table) we …\nThe number of records we successfully migrated (equal to …\nThe extension id.\nThe number of extensions (distinct extension ids) in the …\nThe number of extensions we successfully migrated\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of bytes used by the extension. This result is …\nThe number of keys the extension uses.\nTrue iff we failed to open the source DB at all.\nContains the error value\nContains the success value\nResult enum used by all implementation functions in this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA store is used to access <code>storage.sync</code> data. It manages an …\nReturns a bridged sync engine for Desktop for this store.\nDeletes all key-value pairs for the extension. As with …\nCloses the store and its database connection. See the docs …\nReturns the argument unchanged.\nReturns the values for one or more keys <code>keys</code> can be:\nReturns the bytes in use for the specified items (which …\nGets the changes which the current sync applied. Should be …\nReturns an interrupt handle for this store.\nCalls <code>U::from(self)</code>.\nMigrates data from a database in the format of the “old…\nCreates a store backed by a database at <code>db_path</code>. The path …\nDeletes the values for one or more keys. As with <code>get</code>, <code>keys</code> …\nSets one or more JSON key-value pairs for an extension ID. …\nRead-and-delete (e.g. <code>take</code> in rust parlance, see …\nReturns information about per-extension usage")