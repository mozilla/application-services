searchState.loadedDescShard("remote_settings", 0, "Client for a single Remote Settings collection\nApplication-level Remote Settings manager.\nCollection this client is for\nThis module defines the custom configurations that …\nDownload an attachment with the provided id to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet attachment data for a remote settings record\nDownloads an attachment from [attachment_location]. NOTE: …\nGet the current set of records.\nFetch all records for the configuration this client was …\nGet the current set of records as a map of record_id -&gt; …\nFetches all records for a collection that can be found in …\nFetch all records added to the server since the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Remote Settings client\nConstruct a RemoteSettingsService\nConstruct a new Remote Settings client with the given …\nShutdown the client, releasing the SQLite connection used …\nSync collections for all active clients\nUpdate the remote settings config\nMerge a cached RemoteSettingsResponse and a newly …\nSmaller values first.\nAttachment metadata that can be optionally attached to a […\nA simple HTTP client that can retrieve Remote Settings …\nLarger values first.\nOptions for requests to endpoints that return multiple …\nInternal Remote settings client API\nA parsed Remote Settings record. Records can contain …\nData structure representing the top-level response from …\nThe order in which to return items.\nClient for Remote settings API requests\nGet the Bucket URL for this client.\nTombstone flag (see …\nFetch an attachment from the server\nFetch a server certificate\nFetch records from the server\nSets an option to only return the given <code>field</code> of each item.\nSets an option to only return items whose <code>field</code> is an …\nSets an option to only return items whose <code>field</code> is equal …\nSets an option to only return items whose <code>field</code> is …\nSets an option to only return items that have the given …\nSets an option to only return items that do not have the …\nSets an option to only return items whose <code>field</code> is a …\nSets an option to only return items whose <code>field</code> is …\nSets an option to only return items whose <code>field</code> is less …\nSets an option to only return items whose <code>field</code> is greater …\nSets an option to only return items whose <code>field</code> is not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDownloads an attachment from [attachment_location]. NOTE: …\nDownloads an attachment from [attachment_location]. NOTE: …\nFetches a raw network Response for an attachment.\nGet the current set of records.\nFetches all records for a collection that can be found in …\nFetches all records for a collection that can be found in …\nFetches a raw network Response for records from this client…\nFetches all records that have been published since …\nFetches records from this client’s collection with the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if this client is pointing to the production server\nReturns an iterator of (name, value) query pairs for these …\nSets the option to return at most <code>count</code> items.\nCreate a new Client with properties matching config.\nCreates an empty option set.\nSets an option to return items in <code>order</code> for the given <code>field</code>…\nX.509 certificate chain Url (x5u)\nUrl that’s guaranteed safe to use as a base\nCustom configuration for the client. Currently includes …\nRemote settings configuration\nThe Remote Settings server that the client should use.\nApp context to use for JEXL filtering (when the <code>jexl</code> …\nBucket name to use, defaults to “main”.  Use “…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a BaseUrl for this server\nget_url() that never fails\nInternal version of <code>url()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Remote Settings server to use. Defaults to …\nGet the url::Url for this server\nRemote settings context object\nString containing the XUL application app_id\nUser visible version string (e.g. “1.0.3”)\nThe delivery channel of the application (e.g “nightly”)\nCountry of the user.\nExtra attributes to add to the env for JEXL filtering.\nForm-factor of the device (“phone”, “tablet”, or …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe locale of the application during initialization (e.g. …\nThe name of the operating system (e.g. “Android”, “…\nThe user-visible version of the operating system (e.g. “…\nThe server has asked the client to backoff.\nThe server has asked the client to backoff.\nContains the error value\nContains the error value\nInternal error class, this is what we use inside this crate\nNetwork error while making a remote settings request\nContains the success value\nContains the success value\nPublic error class, this is what we return to consumers\nAn error has occurred while sending a request.\nThe server returned an error code or the response was …\nAn error has occurred while parsing an URL.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitializes an SQLite connection to the Remote Settings …\nThe current remote settings database schema.\nThe current gatabase schema version.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInternal Remote settings service API\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a RemoteSettingsService\nSync collections for all active clients\nUpdate the remote settings config\nInternal storage type\nEmpty out all cached values and start from scratch.  This …\nReturns the argument unchanged.\nGet cached attachment data\nGet cached metadata for this collection\nGet the last modified timestamp for the stored records\nGet cached records for this collection\nSet cached content for this collection.\nCalls <code>U::from(self)</code>.\nSet the attachment data stored in the database, clearing …")