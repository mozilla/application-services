searchState.loadedDescShard("nimbus", 0, "Custom configuration for the client. Currently includes …\nThe Remote Settings server that the client should use.\nNot complete yet This is where the error definitions can go\nDetermine the enrolment status for an experiment.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a BaseUrl for this server\nget_url() that never fails\nInternal version of <code>url()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the url::Url for this server\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis module defines all the information needed to match a …\nOur storage abstraction, currently backed by Rkv.\nThis module implements the primitive functions to implement\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn information about all enrolled experiments. Note …\nReset unique identifiers in response to application-level …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUsed to obtain the prefs values from Gecko\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis method accomplishes a number of tasks important to …\nUsed to set the state for each pref based on enrollments\nThe <code>AppContext</code> object represents the parameters and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNimbus is the main struct representing the experiments …\nAdvances the event store’s concept of <code>now</code> artificially.\nClear all events in the Nimbus event store.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecords an event for the purposes of behavioral targeting.\nRecords an event for the purposes of behavioral targeting.\nReset all enrollments and experiments in the database.\nReset internal state in response to application-level …\nGiven a Gecko pref state and a pref unenroll reason, …\nDatabase used to access persisted data This an abstraction …\nStore containing the set of known experiment enrollments.\nStore containing collected counts of behavior events for …\nStore containing the set of known experiments, as read …\nStore containing miscellaneous metadata about this client …\nA wrapper for an Rkv store. Implemented to allow any value …\nEnumeration of the different stores within our database.\nStore containing pending updates to experiment data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFunction used to obtain values from the internal store.\nGets a Store object, which used with the writer returned by\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMain constructor for a database Initiates the Rkv database …\nFunction used to obtain a “reader” which is used for …\nFunction used to obtain a “reader” which is used for …\nFork of collect_all that simply drops records that fail to …\nFunction used to obtain a “writer” which is used for …\nFunction used to obtain a “writer” which is used for …\nReturns a HashMap representation of the event queries that …\nRecords the context object to Glean\nSets the object’s internal value for the event query …\nReturns a JSON representation of the context object")