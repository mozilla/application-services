searchState.loadedDescShard("fxa_client", 0, "Firefox Accounts Client\nAn OAuth access token, with its associated keys and …\nSent when when there has been a change in authorization …\nSent when the user deletes their Firefox Account.\nAn event that happened on the user’s account.\nResult returned by public-facing API functions\nA client connected to the user’s account.\nUser was connected to FxA, but we observed issues with the …\nUser is currently performing an OAuth flow\nThrown when there was a problem with the authentication …\nInformation about the authorization state of the …\nParameters provided in an incoming OAuth request.\nBegin an oauth flow\nBegin an oauth flow using a URL from a pairing code\nForce a call to FirefoxAccount::get_profile\nCancel an OAuth flow.\nCheck the authorization status for a connected account.\nThe payload sent when invoking a “close tabs” command.\nSent when another device has invoked a command for this …\nComplete an OAuth flow.\nUser is currently connected to FxA\nA device connected to the user’s account.\nA “capability” offered by a device.\nDevice configuration\nSent when a new device connects to the user’s account.\nSent when a device disconnects from the user’s account.\nDetails of a web-push subscription endpoint.\nEnumeration for the different types of device.\nDisconnect the user\nUser has not connected to FxA or has logged out\nAuth error for the <code>ensure_capabilities</code> call that we do on …\nContains the error value\nContains the error value\nFxA internal error type These are used in the internal …\nObject representing the signed-in state of an application.\nPublic error type thrown by many [<code>FirefoxAccount</code>] …\nFxa event\nHigh-level view of the authorization state\nFxa state\nInternal state machine events\nState passed to the state checker, this is exactly the …\nA command invoked by another device.\nInitialize the state machine.  This must be the first …\nLocal device that’s connecting to FxA\nThrown if an operation fails due to network access …\nThrown if the application attempts to complete an OAuth …\nContains the success value\nContains the success value\nOrigin mismatch when handling a pairing flow\nA catch-all for other unspecified errors.\nThrown if there is a panic in the underlying Rust code.\nInformation about the user that controls a Firefox Account.\nSent when the user has modified their account profile …\nResult returned by internal functions\nA cryptographic key associated with an OAuth scope.\nThe payload sent when invoking a “send tab” command.\nA scoped key was missing in the server response when …\nAn individual entry in the navigation history of a sent …\nIndicates that a tab has been sent to this device.\nThe state machine needs to be initialized via […\nAn unknown event, most likely an event the client doesn’…\nUser data provided by the web content, meant to be …\nThrown if the application attempts to complete an OAuth …\nCreate a new OAuth authorization code using the stored …\nThe URL of a profile picture representing the user.\nInitiate a web-based OAuth sign-in flow.\nInitiate a device-pairing sign-in flow.\nCheck authorization status for this application.\nCheck the internal state\nCheck the internal state\nClear the access token cache in response to an auth …\nClear any custom display name used for this application …\nregistered OAuth client id of the application.\nUse device commands to close one or more tabs on another …\nComplete an OAuth flow.\nDisconnect from the user’s account.\nThe user’s preferred textual display name.\nThe user’s current primary email address.\nEnsure that the device record has a specific set of …\nThe navigation history of the sent tab.\nThe expiry time of the token, in seconds.\nA unique identifier to be included in send-tab metrics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRestore a <code>FirefoxAccount</code> instance from serialized state.\nCollect and return telemetry about send-tab attempts.\nGet a short-lived OAuth access token for the user’s …\nGet the list of all client applications attached to the …\nGet the high-level authentication state of the client\nGet a URL which shows a “successfully connected!” …\nGet the device id registered for this application.\nGet the list of devices registered on the user’s account.\nGet a URL at which the user can manage their account and …\nGet a URL at which the user can manage the devices …\nGet the URL at which to begin a device-pairing signin flow.\nGet profile information for the signed-in user, if any.\nGet the session token for the user’s account, if one is …\nGet the current state\nGet the token server URL\nAdvance the internal state based on an internal event\nAdvance the internal state based on a public event\nProcess and respond to a server-delivered account update …\nUpdate the stored session token for the user’s account.\nCreate a new device record for this application.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the <code>avatar</code> URL represents the default avatar image.\nThe key material, as base64-url-encoded bytes.\nThe client-side encryption key associated with this scope.\nAn opaque unique identifier for this key.\nThe type of key.\nCreate a new <code>FirefoxAccount</code> instance, not connected to any …\nUpdate the state based on authentication issues.\nPoll the server for any pending device commands.\nProcess an event (login, logout, etc).\n<code>redirect_uri</code> - the registered OAuth redirect URI of the …\nThe scope of access granted by token.\nThe OAuth scope with which this key is associated.\nUse device commands to send a single tab to another device.\nFxaServer to connect with\nUpdate the display name used for this application instance.\nSet or update a push subscription endpoint for this device.\nSets the user data for a user agent <strong>Important</strong>: This should …\nUsed by the application to test auth token issues\nUsed by the application to test auth token issues\nUsed by the application to test auth token issues\nA unique identifier to be included in send-tab metrics.\nSave current state to a JSON string.\nThe access token itself.\nURL for the user’s Sync Tokenserver. This can be used to …\nThe user’s account uid")