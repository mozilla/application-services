(function() {
    var type_impls = Object.fromEntries([["tabs",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DeviceType\" class=\"impl\"><a href=\"#impl-Clone-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; DeviceType</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConvertError%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-ConvertError%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; ConvertError&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><section id=\"method.try_convert_unexpected_callback_error\" class=\"method trait-impl\"><a href=\"#method.try_convert_unexpected_callback_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_convert_unexpected_callback_error</a>(\n    e: UnexpectedUniFFICallbackError,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></div></details>","ConvertError<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DeviceType\" class=\"impl\"><a href=\"#impl-Debug-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-DeviceType\" class=\"impl\"><a href=\"#impl-Default-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; DeviceType</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.205/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.205/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.205/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FfiConverter%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-FfiConverter%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; FfiConverter&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID_META\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TYPE_ID_META\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TYPE_ID_META</a>: MetadataBuffer</h4></section></summary><div class='docblock'>Type ID metadata, serialized into a [MetadataBuffer].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.FfiType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FfiType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">FfiType</a> = RustBuffer</h4></section></summary><div class='docblock'>The low-level type used for passing values of this type over the FFI. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower\" class=\"method trait-impl\"><a href=\"#method.lower\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lower</a>(v: DeviceType) -&gt; RustBuffer</h4></section></summary><div class='docblock'>Lower a rust value of the target type, into an FFI value of type Self::FfiType. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_lift\" class=\"method trait-impl\"><a href=\"#method.try_lift\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_lift</a>(buf: RustBuffer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Lift a rust value of the target type, from an FFI value of type Self::FfiType. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write</a>(obj: DeviceType, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Write a rust value into a buffer, to send over the FFI in serialized form. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read\" class=\"method trait-impl\"><a href=\"#method.try_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read a rust value from a buffer, received over the FFI in serialized form. <a>Read more</a></div></details></div></details>","FfiConverter<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-DeviceType\" class=\"impl\"><a href=\"#impl-Hash-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lift%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-Lift%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; Lift&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FfiType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FfiType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">FfiType</a> = &lt;DeviceType as FfiConverter&lt;UT&gt;&gt;::FfiType</h4></section><section id=\"method.try_lift\" class=\"method trait-impl\"><a href=\"#method.try_lift\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_lift</a>(v: &lt;DeviceType as Lift&lt;UT&gt;&gt;::FfiType) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.try_read\" class=\"method trait-impl\"><a href=\"#method.try_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_lift_from_rust_buffer\" class=\"method trait-impl\"><a href=\"#method.try_lift_from_rust_buffer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_lift_from_rust_buffer</a>(v: RustBuffer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Convenience method</div></details></div></details>","Lift<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LiftRef%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-LiftRef%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; LiftRef&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.LiftType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LiftType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LiftType</a> = DeviceType</h4></section></div></details>","LiftRef<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LiftReturn%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-LiftReturn%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; LiftReturn&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ReturnType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReturnType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReturnType</a> = &lt;DeviceType as Lift&lt;UT&gt;&gt;::FfiType</h4></section></summary><div class='docblock'>FFI return type for trait interfaces</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_lift_successful_return\" class=\"method trait-impl\"><a href=\"#method.try_lift_successful_return\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_lift_successful_return</a>(\n    v: &lt;DeviceType as LiftReturn&lt;UT&gt;&gt;::ReturnType,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DeviceType, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.58/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Lift a successfully returned value from a trait interface</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lift_foreign_return\" class=\"method trait-impl\"><a href=\"#method.lift_foreign_return\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lift_foreign_return</a>(\n    ffi_return: Self::ReturnType,\n    call_status: RustCallStatus,\n) -&gt; Self</h4></section></summary><div class='docblock'>Lift a foreign returned value from a trait interface <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lift_error\" class=\"method trait-impl\"><a href=\"#method.lift_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lift_error</a>(_buf: RustBuffer) -&gt; Self</h4></section></summary><div class='docblock'>Lift a Rust value for a callback interface method error result <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_callback_unexpected_error\" class=\"method trait-impl\"><a href=\"#method.handle_callback_unexpected_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">handle_callback_unexpected_error</a>(e: UnexpectedUniFFICallbackError) -&gt; Self</h4></section></summary><div class='docblock'>Lift a Rust value for an unexpected callback interface error <a>Read more</a></div></details></div></details>","LiftReturn<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lower%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-Lower%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; Lower&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FfiType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FfiType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">FfiType</a> = &lt;DeviceType as FfiConverter&lt;UT&gt;&gt;::FfiType</h4></section><section id=\"method.lower\" class=\"method trait-impl\"><a href=\"#method.lower\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lower</a>(obj: DeviceType) -&gt; &lt;DeviceType as Lower&lt;UT&gt;&gt;::FfiType</h4></section><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write</a>(obj: DeviceType, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_into_rust_buffer\" class=\"method trait-impl\"><a href=\"#method.lower_into_rust_buffer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lower_into_rust_buffer</a>(obj: Self) -&gt; RustBuffer</h4></section></summary><div class='docblock'>Convenience method</div></details></div></details>","Lower<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerError%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-LowerError%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; LowerError&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_error\" class=\"method trait-impl\"><a href=\"#method.lower_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lower_error</a>(obj: DeviceType) -&gt; RustBuffer</h4></section></summary><div class='docblock'>Lower this value for scaffolding function return <a>Read more</a></div></details></div></details>","LowerError<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerReturn%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-LowerReturn%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; LowerReturn&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ReturnType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReturnType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReturnType</a> = &lt;DeviceType as Lower&lt;UT&gt;&gt;::FfiType</h4></section></summary><div class='docblock'>The type that should be returned by scaffolding functions for this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_return\" class=\"method trait-impl\"><a href=\"#method.lower_return\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lower_return</a>(\n    v: DeviceType,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;DeviceType as LowerReturn&lt;UT&gt;&gt;::ReturnType, RustCallError&gt;</h4></section></summary><div class='docblock'>Lower the return value from an scaffolding call <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_failed_lift\" class=\"method trait-impl\"><a href=\"#method.handle_failed_lift\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">handle_failed_lift</a>(\n    error: LiftArgsError,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::ReturnType, RustCallError&gt;</h4></section></summary><div class='docblock'>Lower the return value for failed argument lifts <a>Read more</a></div></details></div></details>","LowerReturn<UT>","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DeviceType\" class=\"impl\"><a href=\"#impl-PartialEq-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;DeviceType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-DeviceType\" class=\"impl\"><a href=\"#impl-Serialize-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for DeviceType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    s: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.205/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","tabs::storage::TabsDeviceType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeId%3CUT%3E-for-DeviceType\" class=\"impl\"><a href=\"#impl-TypeId%3CUT%3E-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;UT&gt; TypeId&lt;UT&gt; for DeviceType</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.TYPE_ID_META\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TYPE_ID_META\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TYPE_ID_META</a>: MetadataBuffer</h4></section></div></details>","TypeId<UT>","tabs::storage::TabsDeviceType"],["<section id=\"impl-Copy-for-DeviceType\" class=\"impl\"><a href=\"#impl-Copy-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for DeviceType</h3></section>","Copy","tabs::storage::TabsDeviceType"],["<section id=\"impl-Eq-for-DeviceType\" class=\"impl\"><a href=\"#impl-Eq-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for DeviceType</h3></section>","Eq","tabs::storage::TabsDeviceType"],["<section id=\"impl-StructuralPartialEq-for-DeviceType\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-DeviceType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for DeviceType</h3></section>","StructuralPartialEq","tabs::storage::TabsDeviceType"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[29981]}